name: Claude Admin Tools

on:
  workflow_dispatch:
    inputs:
      action_type:
        description: '実行アクション'
        required: true
        default: 'run_quality_check' # quality_check から run_quality_check に変更
        type: choice
        options:
          - run_claude_autofix
          - run_quality_check

jobs:
  # claude-dispatcher は不要になるため削除

  # auto-fix-handler を run_claude_autofix にリネームし、直接ディスパッチ入力を参照
  run_claude_autofix:
    if: github.event.inputs.action_type == 'run_claude_autofix'
    runs-on: ubuntu-latest
    timeout-minutes: 12
    permissions:
      contents: write
      issues: write # IssueやPRにコメントするために必要
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 1 # 最新のコードを取得

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit

      - name: Quality analysis for auto-fix
        id: analysis_for_fix
        run: |
          echo "=== 品質分析 (自動修正目的) ===" | tee analysis.txt
          echo "typescript_errors=false" >> $GITHUB_OUTPUT
          if ! npx tsc --noEmit --project tsconfig.json 2>&1 | tee -a analysis.txt; then echo "typescript_errors=true" >> $GITHUB_OUTPUT; fi
          echo "eslint_errors=false" >> $GITHUB_OUTPUT
          if ! npm run lint 2>&1 | tee -a analysis.txt; then echo "eslint_errors=true" >> $GITHUB_OUTPUT; fi
          echo "test_errors=false" >> $GITHUB_OUTPUT
          if ! npm test 2>&1 | tee -a analysis.txt; then echo "test_errors=true" >> $GITHUB_OUTPUT; fi

      - name: Claude Auto-Fix Task
        if: steps.analysis_for_fix.outputs.typescript_errors == 'true' || steps.analysis_for_fix.outputs.eslint_errors == 'true' || steps.analysis_for_fix.outputs.test_errors == 'true'
        uses: anthropics/claude-code-action@beta
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          timeout_minutes: "10"
          allowed_tools: "Edit,View,GrepTool,Bash(npm test)"
          custom_instructions: |
            開発者からの手動実行リクエストです。
            以下の品質分析結果に基づいて、コードの自動修正を試みてください。
            ```
            ${{ steps.analysis_for_fix.outputs.analysis_output }} # analysis.txt の内容を渡す想定だが、直接は難しい
            ```
            分析結果の詳細は、先行する「Quality analysis for auto-fix」ステップのログを参照してください。
            修正案は、このワークフローを実行したブランチ (${{ github.ref_name }}) に直接コミットしてください。
            コミットメッセージは「Fix: Apply Claude auto-fix based on quality analysis」としてください。
            修正後は `npm test` を実行し、テストが成功することを確認してください。

  # quality-check を run_quality_check にリネームし、直接ディスパッチ入力を参照
  run_quality_check:
    if: github.event.inputs.action_type == 'run_quality_check'
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: read # 品質チェックのみなので読み取り専用
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit

      - name: Comprehensive quality check
        run: |
          echo "=== 品質チェック結果 ==="
          echo "🔍 TypeScript (tsc --noEmit --project tsconfig.json):"
          if npx tsc --noEmit --project tsconfig.json; then echo "✅ 正常"; else echo "❌ エラー"; fi
          echo "🔍 ESLint (npm run lint):"
          if npm run lint; then echo "✅ 正常"; else echo "❌ エラー"; fi
          echo "🔍 テスト (npm test):"
          if npm test; then echo "✅ 正常"; else echo "❌ エラー"; fi
          echo "🔍 依存関係 (npm audit --audit-level=high):"
          if npm audit --audit-level=high; then echo "✅ 正常"; else echo "⚠️ 警告またはエラー"; fi
          echo "🔍 Target Branch:"
          echo ${{ github.ref_name }} 