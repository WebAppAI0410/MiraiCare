name: Claude Auto Fix

on:
  pull_request:
    types: [opened, synchronize]
  workflow_run:
    workflows: ["RN Unit CI"]
    types: [completed]

jobs:
  auto-fix-ci-failures:
    # CI失敗時またはPR更新時に自動修正
    if: |
      (github.event_name == 'pull_request') ||
      (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'failure')
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      contents: write
      issues: write
      pull-requests: write
      actions: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref || github.head_ref }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Get PR details
        id: pr_details
        uses: actions/github-script@v7
        with:
          script: |
            let prNumber, headRef;
            
            if (context.eventName === 'pull_request') {
              prNumber = context.payload.pull_request.number;
              headRef = context.payload.pull_request.head.ref;
            } else if (context.eventName === 'workflow_run') {
              // workflow_runの場合、関連するPRを検索
              const prs = await github.rest.pulls.list({
                owner: context.repo.owner,
                repo: context.repo.repo,
                state: 'open'
              });
              
              const pr = prs.data.find(pr => 
                pr.head.ref.startsWith('claude/issue-') || 
                pr.title.includes('Claude実装')
              );
              
              if (pr) {
                prNumber = pr.number;
                headRef = pr.head.ref;
              }
            }
            
            core.setOutput('pr_number', prNumber);
            core.setOutput('head_ref', headRef);
            
            return { prNumber, headRef };

      - name: Check CI status
        id: ci_status
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = '${{ steps.pr_details.outputs.pr_number }}';
            if (!prNumber) return;
            
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber
            });
            
            const { data: checks } = await github.rest.checks.listForRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: pr.head.sha
            });
            
            const failedChecks = checks.check_runs.filter(check => 
              check.conclusion === 'failure' && 
              (check.name.includes('test') || check.name.includes('lint'))
            );
            
            core.setOutput('has_failures', failedChecks.length > 0);
            core.setOutput('failed_checks', JSON.stringify(failedChecks.map(c => c.name)));
            
            return failedChecks;

      - name: Trigger Claude Code Actions for CI fixes
        if: steps.ci_status.outputs.has_failures == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = '${{ steps.pr_details.outputs.pr_number }}';
            const failedChecks = '${{ steps.ci_status.outputs.failed_checks }}';
            
            if (!prNumber) return;
            
            const commentBody = `@claude CI失敗を修正してください\\n\\n## 🚨 CI失敗の詳細\\n失敗したチェック: ${failedChecks}\\n\\n## 📋 修正が必要な項目\\n- [ ] TypeScriptコンパイルエラーの修正\\n- [ ] 不足している依存関係の追加\\n- [ ] ESLintエラーの修正\\n- [ ] ユニットテストの修正\\n\\n## 🎯 TDDアプローチでの修正手順\\n1. **Red**: 失敗しているテストを特定\\n2. **Green**: 最小限の修正でテストを通す\\n3. **Refactor**: コードの品質を向上\\n\\n以下の依存関係が不足している可能性があります：\\n- \\`@testing-library/react-native\\`\\n- \\`@types/jest\\`\\n- \\`jest-expo\\`\\n- \\`zustand\\`\\n- \\`@supabase/supabase-js\\`\\n- \\`@react-native-async-storage/async-storage\\`\\n\\npackage.jsonに追加し、TypeScriptエラーを修正してください。`;

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: commentBody
            });

      - name: Wait for Claude response
        if: steps.ci_status.outputs.has_failures == 'true'
        run: |
          echo "Claude Code Actionsに自動修正を要求しました"
          echo "PR #${{ steps.pr_details.outputs.pr_number }} で修正が実行されます" 